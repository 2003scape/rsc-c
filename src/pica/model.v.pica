; shader for game models and terrain

; uniforms
.fvec model[4], projection_view_model[4]
.bool cull_front

; constants
.constf myconst(0.0, 1.0, -1.0, -0.5)
.alias zeros myconst.xxxx
.alias ones  myconst.yyyy

; outputs
.out out_position position
.out out_colour color
.out out_texture_position texcoord0

; inputs
.in in_position v0
.in in_normal v1
.in in_lighting v2
.in in_front_colour v3
.in in_front_texture v4
.in in_back_colour v5
.in in_back_texture v6

.proc main
    ; r0.xyz = in_position.xyz, w = 1.0f
    mov r0.xyz, in_position
    mov r0.w, ones

    ; gl_Position = projection_view_model * vec4(position, 1.0);
    dp4 out_position.x, projection_view_model[0], r0
    dp4 out_position.y, projection_view_model[1], r0
    dp4 out_position.z, projection_view_model[2], r0
    dp4 out_position.w, projection_view_model[3], r0

    ; out_colour = (1.0, 0.0, 1.0, 0.5)
    ; mov out_colour, myconst.yxyw

    mov out_colour, myconst.x

    ifu cull_front
;        mov out_colour, myconst.yxyy
        mov out_colour.xyz, in_back_colour.xyz
        mov out_texture_position, in_back_texture.xy
    .else
;        mov out_colour.xyzw, myconst.yxxy
        mov out_colour.xyz, in_front_colour.xyz
        mov out_texture_position, in_front_texture.xy
    .end

    end
.end
